@model shareurstorydb.StoriesListModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script language="javascript" type="text/javascript">
    function GetHref(pageNo) {
        return "?PageNumber=" + pageNo + "&SearchText=" + $(".SearchText").val() + "&SortOption=" + document.getElementById("SortOption").value;
    }

    $(function () {
        // Register for the change event of the drop down
        $('#ddlSearchBy').change(function () {
            var SearchBy = document.getElementById("ddlSearchBy");

            if (SearchBy.value == "0") {
                //Hide category dropdown
                ddlSearchByCategories.style.display = "none";
                //Hide search textbox
                txtSearchBy.style.display = "none";
            }
            if (SearchBy.value == "1") {
                //Show category dropdown
                ddlSearchByCategories.style.display = "block";
                //Hide search textboxea
                txtSearchBy.style.display = "none";
            }
            if (SearchBy.value == "2") {
                //Hide category dropdown
                ddlSearchByCategories.style.display = "none";
                //Show search textbox
                txtSearchBy.style.display = "block";
            }
        });
    });
</script>

<!--
Categories?
How to keep eveything selected after searching or sorting
Changing pages or view all does not send sort or search options, should I save previously to some sessions?
Caching... want to create a service that would run every 10 minutes and refresh caching.
-->
@using (Html.BeginForm("stories", "Home", FormMethod.Get))
{
    <div class="containerBig">
        <div class="containerInner">
            <div class="containerTitle"><div class="containerTitleText">Find a Story</div></div>
            <div style="clear:both;"></div>
            <div class="containerStory">
                <div class="storyText2">
                    <div class="search">
                        <div class="searchText">Search Stories:</div>

                        <!--<div class="searchInput">@Html.DropDownListFor(x => x.SearchOptions, new SelectList(Model.SearchOptions, "Value", "Text"), new { id = "ddlSearchBy" })</div>-->
                        <div class="searchInput" id="txtSearchBy">@Html.TextBoxFor(model => model.SearchText, new { id = "SearchText", @class = "SearchText" })</div>
                        <!--<div class="searchInput" id="ddlSearchByCategories" style="display:none;">@Html.DropDownListFor(x => x.SearchCategories, new SelectList(Model.SearchCategories, "Value", "Text"), new { id = "ddlSearchByCategories" })</div>-->
                        <div class="searchButton"><input type="submit" value="Search" class="cSearchButton" /></div>
                    </div>
                    <div style="clear:both;"></div>
                    <!--<div class="search">
                        <div class="searchText">Sort By:</div>
                        <div class="searchInput">@Html.DropDownListFor(x => x.SortOptions, new SelectList(Model.SortOptions, "Value", "Text"), new { id = "ddlSortBy" })</div>
                        <div class="searchButton"><input type="submit" value="Sort" class="cSearchButton" /></div>
                    </div>
                    <div style="clear:both;"></div>
                    -->
                </div>
            </div>
        </div>
    </div>

    <div style="clear:both; height:10px;"></div>

    <!-- START: Sorting + Paging -->
    <div class="sort">
        <div class="sortInner">
            <div class="pagingLeft">
                Sort By:
                @Html.DropDownListFor(model => model.SortOption, new SelectList(Model.SortOptions, "Value", "Text", Model.SortOption), new { onchange = "submit();" })

            </div>
            <div class="pagingRight">
                @foreach (string page in Model.PageNoList)
                {
                    if (page == Model.currentPage)
                    {
                        <div style="float:left; padding-top:2px;">
                            &nbsp;&nbsp;Page:&nbsp;
                            @page <span>of</span> @Model.PageNoList.Count()
                            <span>&nbsp;</span>
                        </div>

                        <div style="float:left">
                            <!--Show the back arrow to go to previous page-->
                            @if (Convert.ToInt32(page) != 1)
                            {
                                var pageNo = Convert.ToInt32(page) - 1;
                                <a href="javascript:window.location.href=GetHref(@pageNo);" class="pageLeft"></a>
                                //@Html.ActionLink("<", "stories", new { PageNumber = Convert.ToInt32(page) - 1 }, new { @class = "pageLeft" })
                            }
                            else
                            {
                                <div class="pageLeftD"></div>
                            }
                            <div style="float:left">&nbsp;</div>
                            <!--Show the forward arrow to go to next page-->
                            @if (Convert.ToInt32(page) < @Model.PageNoList.Count())
                            {
                                var pageNo = Convert.ToInt32(page) + 1;
                                <a href="javascript:window.location.href=GetHref(@pageNo);" class="pageRight"></a>
                                //@Html.ActionLink(">", "stories", new { PageNumber = Convert.ToInt32(page) + 1 }, new { @class = "pageRight" })
                            }
                            else
                            {
                                <div class="pageRightD"></div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <!-- END: Sorting + Paging -->

    <div style="clear:both; height:10px;"></div>

    <div class="containerBig">
        <div class="containerInner">
            @foreach (var item in Model.Stories)
            {
                <div class="containerTitle">
                    <div class="containerTitleText">@Html.Raw(item.Title)</div>
                    <div class="containerTitleSubText isDesktop">by @Html.ActionLink(item.Name.ToString(), "Stories", new { u = item.UserId.ToString() })</div>
                </div>
                <div style="clear:both;"></div>
                <div class="containerStory">
                    <div class="storyTitle"></div>
                    <div class="storyText">@Html.Raw(item.Post.Length <= 260 ? item.Post : String.Concat(item.Post.Substring(0, 260), " ... "))</div>

                    <div class="containerBottomLeft">
                        (<span style="color:blue">
                            <a href="stories/@Html.Raw(item.ID)">Read More</a>
                        </span>)
                    </div>
                    <div class="isMobile">by @Html.Raw(item.Name.ToString())</div>
                    <div class="containerBottomRight">
                        <b>Created Date:</b> @Html.Raw(item.CreateDate.ToString("MMMM dd, yyyy"))<span class="isDesktop">&nbsp;|&nbsp;</span><span class="isMobile"><br /></span><b>Likes:</b> @Html.Raw(item.Likes.ToString())
                    </div>
                    <div style="clear:both;"></div>
                </div>
                <div style="clear:both; height:10px;"></div>
            }
        </div>
    </div>

    <!-- START: PAGING BOTTOM -->
    <div style="clear:both; height:10px;"></div>
    <div style="text-align:center;">
        Page:&nbsp;&nbsp;
        @foreach (string page in Model.PageNoList)
        {
            if (page != Model.currentPage)
            {
                <a href="javascript:window.location.href=GetHref(@page);">@page</a>
                //@Html.ActionLink(@page, "stories", new { PageNumber = @page })
            }
            else
            {
                @page
            }
            <span>&nbsp;</span>
        }
    </div>
    <div style="clear:both; height:10px;"></div>
    <!-- END: PAGING BOTTOM -->

}